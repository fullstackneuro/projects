function fibersPDB = a_abcd_mrtrix_track_connacctome

%
% This functions shows how to track between two ROIS using mrtrix.
% This si very helpful for ideintifying some fiber groups for example the
% optic radiation.
%
% This is how the code works.
% 1. We load two ROIs in the brain, for Shumpei's project for example we
%    will load the right-LGN and the right-Visual cortex
% 2. We create union ROI by combining these two ROIs. The union ROI is used
%    as seeding for the fibers. mrtrix will initiate and terminate fibers only
%    within the volume defined by the Union ROI.
% 3. We create a white matter mask. This mask is generally a large portion
%    of the white matter. A portion that contains both union ROIs. For example
%    the right hemisphere.
% 4. We use mrtrix to track between the right-LGN and righ-visual cortex.
%    mrtrix will initiate fibers by seeding within the UNION ROI and it will 
%    only keep fibers that have paths within the white matter masks.
%
% The final result of this script is to generate lot's of candidate fibers 
% that specifically end and start from the ROI of interest. This is a similar 
% approach to Contrack. 
%
% INPUTS: none
% OUTPUTS: the final name of the ROI created at each iteration
%
% Written by Franco Pestilli (c) Stanford University Vistasoft

baseDir = '/mnt/acorn/abcd/matproc';


subjects = a_abcd_generate_sublists('rawvtanacc');

no_fd = a_abcd_generate_sublists('fd');
subjects = setdiff(subjects, no_fd);

no_csd = a_abcd_generate_sublists('csd');
subjects = setdiff(subjects, no_csd);

%{
subjects = {
'NDARINVPG8YZKD4', ...
'NDARINVPGMJMWUZ', ...
'NDARINVPGN6TE1J', ...
'NDARINVPGV8M0Z4', ...
'NDARINVPH1V3YZD', ...
'NDARINVPH3LCEGR', ...
'NDARINVPH4BZ3KW', ...
'NDARINVPH84UZAC', ...
'NDARINVPHA422B4', ...
'NDARINVPHDJPYND', ...
'NDARINVPHGUL1Z3', ...
'NDARINVPHGUNDL7', ...
'NDARINVPHHNBM9Z', ...
'NDARINVPHL3D8GY', ...
'NDARINVPHMZV0N7', ...
'NDARINVPHUWEGK1', ...
'NDARINVPJ39YVH9', ...
'NDARINVPJ80XL8H', ...
'NDARINVPJF841VD', ...
'NDARINVPK2EFH70', ...
'NDARINVPKD1XX0E', ...
'NDARINVPKGZ9380', ...
'NDARINVPKHAU8GN', ...
'NDARINVPKNB0CKK', ...
'NDARINVPKXLA8CU', ...
'NDARINVPL13NA8X', ...
'NDARINVPL7L6GEM', ...
'NDARINVPL7VWK07', ...
'NDARINVPLJ4JZJA', ...
'NDARINVPLMH5DCB', ...
'NDARINVPLP1WVXM', ...
'NDARINVPM4D70BG', ...
'NDARINVPMC2DEDN', ...
'NDARINVPMHGZU3M', ...
'NDARINVPMNK4WTH', ...
'NDARINVPMWGZ7G1', ...
'NDARINVPMYB46U3', ...
'NDARINVPN3M8KBK', ...
'NDARINVPNMUGJ4F', ...
'NDARINVPNUWHMJP', ...
'NDARINVPPEYYCZV', ...
'NDARINVPPGVEPWW', ...
'NDARINVPPN58EEF', ...
'NDARINVPPTGWLKJ', ...
'NDARINVPPY8DZG0', ...
'NDARINVPR3T5MAK', ...
'NDARINVPRDYVE4C', ...
'NDARINVPRLTKVRN', ...
'NDARINVPRNEYMH1', ...
'NDARINVPRX26ZJ6', ...
'NDARINVPRZDG64U', ...
'NDARINVPTK9T3R5', ...
'NDARINVPTM61L43', ...
'NDARINVPTV6A941', ...
'NDARINVPUEXNZJU', ...
'NDARINVPUGJUJZ2', ...
'NDARINVPURW8L0G', ...
'NDARINVPUYA9796', ...
'NDARINVPV0GEE35', ...
'NDARINVPV1DMUHD', ...
'NDARINVPV2C6C1M', ...
'NDARINVPV7EDNMA', ...
'NDARINVPV9AKNCF', ...
'NDARINVPVV52NXT', ...
'NDARINVPW5RU88H', ...
'NDARINVPWL6YB2C', ...
'NDARINVPWY97N4C', ...
'NDARINVPX2DGJHP', ...
'NDARINVPX3YX562', ...
'NDARINVPX8C7W65', ...
'NDARINVPXA96T93', ...
'NDARINVPXPY8J3A', ...
'NDARINVPXR28KCG', ...
'NDARINVPXUVDWE2', ...
'NDARINVPYD5R8UA', ...
'NDARINVPZ1GC78K', ...
'NDARINVPZ7LHWF8', ...
'NDARINVPZ9JZHZ4', ...
'NDARINVPZDDVLGW', ...
'NDARINVPZJ5VXTX', ...
'NDARINVPZJNUUC8', ...
'NDARINVPZK0NW7K', ...
'NDARINVPZUFXXY1', ...
'NDARINVR06UP6NN', ...
'NDARINVR0J4APPX', ...
'NDARINVR0TYK5V9', ...
'NDARINVR12GH8DH', ...
'NDARINVR17JHZRJ', ...
'NDARINVR1KAV63D', ...
'NDARINVR1KT1MAU', ...
'NDARINVR268FVXE', ...
'NDARINVR28A45T6', ...
'NDARINVR29UPFWC', ...
'NDARINVR2EMBDV7', ...
'NDARINVR2HJCC0M', ...
'NDARINVR2R52JP7', ...
'NDARINVR2T9NUK9', ...
'NDARINVR2TNT1JG', ...
'NDARINVR3CBHF7B', ...
'NDARINVR3VTVCE5', ...
'NDARINVR3ZE9RGY', ...
'NDARINVR40EH36N', ...
'NDARINVR4EUGHE9', ...
'NDARINVR4PV7WZ3', ...
'NDARINVR51XRC0H', ...
'NDARINVR547JUTN', ...
'NDARINVR5EGEA6F', ...
'NDARINVR5EL81TR', ...
'NDARINVR5FD0UXH', ...
'NDARINVR5TTP09Z', ...
'NDARINVR5VKKRM9', ...
'NDARINVR62PJ1EJ', ...
'NDARINVR668RXK7', ...
'NDARINVR6ET5C77', ...
'NDARINVR6HHHKR9', ...
'NDARINVR6PPY0VL', ...
'NDARINVR6TLLPMG', ...
'NDARINVR6YF8VHD', ...
'NDARINVR6ZXCFE9', ...
'NDARINVR76W27PF', ...
'NDARINVR7G6JDFU', ...
'NDARINVR7N0XBL6', ...
'NDARINVR8WEKB2F', ...
'NDARINVR9AJ27WZ', ...
'NDARINVR9MG0HJ4', ...
'NDARINVR9Z48Y9H', ...
'NDARINVRAFYUKZZ', ...
'NDARINVRAPG65HL', ...
'NDARINVRAR30NKY', ...
'NDARINVRAZRBGAL', ...
'NDARINVRBJT537E', ...
'NDARINVRBNRB1DU', ...
'NDARINVRBPW71J1', ...
'NDARINVRC3GEEEJ', ...
'NDARINVRC6BE96Y', ...
'NDARINVRCA6BCK0', ...
'NDARINVRCB6GG4P', ...
'NDARINVRCE62M22', ...
'NDARINVRCFHLNK7', ...
'NDARINVRCFLYCF4', ...
'NDARINVRCGDPDYL', ...
'NDARINVRCNDV76P', ...
'NDARINVRCV1G0DA', ...
'NDARINVRCXPE6ZR', ...
'NDARINVRDCUTM3A', ...
'NDARINVRDJX9GRE', ...
'NDARINVRDXFBTYA', ...
'NDARINVRDZNNL8U', ...
'NDARINVRE317TA3', ...
'NDARINVRE48TR17', ...
'NDARINVRE60W9L4', ...
'NDARINVREBD8GTZ', ...
'NDARINVREFXMF6L', ...
'NDARINVREGPJEJ9', ...
'NDARINVREMB1VEK', ...
'NDARINVRF2ULZ5M', ...
'NDARINVRFJLGX8M', ...
'NDARINVRFNBVD1U', ...
'NDARINVRFNDEMN8', ...
'NDARINVRFNHTDPM', ...
'NDARINVRFT4NJA8', ...
'NDARINVRFW8X9X4', ...
'NDARINVRFXUXZJB', ...
'NDARINVRFZCD1EJ', ...
'NDARINVRG2ZMT9N', ...
'NDARINVRG6U88KM', ...
'NDARINVRGHUCFDR', ...
'NDARINVRGJHW57A', ...
'NDARINVRGP7HTB4', ...
'NDARINVRGR9NG5T', ...
'NDARINVRGVY0VAU', ...
'NDARINVRHDYNX5V', ...
'NDARINVRHLEYZMW', ...
'NDARINVRJ67E8PE', ...
'NDARINVRJA23JNL', ...
'NDARINVRJLKFF0B', ...
'NDARINVRJPAKY38', ...
'NDARINVRJY2T5DU', ...
'NDARINVRKD7U24Y', ...
'NDARINVRKJGUNH6', ...
'NDARINVRKNCRLDD', ...
'NDARINVRKYXUEXM', ...
'NDARINVRL198MFV', ...
'NDARINVRLABZK7J', ...
'NDARINVRLETBAV0', ...
'NDARINVRLG26UPV', ...
'NDARINVRLP5AH5E', ...
'NDARINVRLV2KEJP', ...
'NDARINVRLXEPYKB', ...
'NDARINVRMAND772', ...
'NDARINVRMB0B610', ...
'NDARINVRMEME8GY', ...
'NDARINVRMNE6ECK', ...
'NDARINVRMV0P0FV', ...
'NDARINVRN6LY8RU', ...
'NDARINVRNCKGLJR', ...
'NDARINVRP0XB0ZR', ...
'NDARINVRPYKZRFL', ...
'NDARINVRRFZW203', ...
'NDARINVRRG98LDD', ...
'NDARINVRRKJJYWM', ...
'NDARINVRRUM0E9U', ...
'NDARINVRT0YKWJM', ...
'NDARINVRT4HRE6Z', ...
'NDARINVRTDH8349', ...
'NDARINVRTDZTY9C', ...
'NDARINVRTLY443G', ...
'NDARINVRTYGC16L', ...
'NDARINVRTZP6F8K', ...
'NDARINVRU3LYZZF', ...
'NDARINVRUKL1DUN', ...
'NDARINVRUPYH7NX', ...
'NDARINVRUVAZC2F', ...
'NDARINVRUVFBX1L', ...
'NDARINVRV0X4CZT', ...
'NDARINVRV0X5P44', ...
'NDARINVRV23D3UV', ...
'NDARINVRVDEH2YJ', ...
'NDARINVRVKDMDNH', ...
'NDARINVRVM5WTB0', ...
'NDARINVRVNU9GZK', ...
'NDARINVRW46YERL', ...
'NDARINVRW4NW1FC', ...
'NDARINVRW8117A7', ...
'NDARINVRW8AFCLZ', ...
'NDARINVRW8JB8M2', ...
'NDARINVRWDF8L2R', ...
'NDARINVRWY77XH2', ...
'NDARINVRX2KLC0M', ...
'NDARINVRXEE3K3Y', ...
'NDARINVRXKGP8CG', ...
'NDARINVRXN9H1J6', ...
'NDARINVRXNLCPPK', ...
'NDARINVRXR3PB36', ...
'NDARINVRZ1BPZ6J', ...
'NDARINVRZ3AMJJG', ...
'NDARINVRZ9M4970', ...
'NDARINVRZA4FFKR', ...
'NDARINVRZAM8ZX0', ...
'NDARINVRZCJ7X42', ...
'NDARINVT09Y5F0B', ...
'NDARINVT0J4DFC4', ...
'NDARINVT0JW7H6Z', ...
'NDARINVT0YVV9PU', ...
'NDARINVT12VNXF2', ...
'NDARINVT161L03G', ...
'NDARINVT1GJUT9Z', ...
'NDARINVT1JDV64B', ...
'NDARINVT1VTW1HM', ...
'NDARINVT1XD5N8A', ...
'NDARINVT226J5Y3', ...
'NDARINVT27UF3XK', ...
'NDARINVT2GU26AW', ...
'NDARINVT2JJ42KE', ...
'NDARINVT2V8UJ3M', ...
'NDARINVT2YYABW3', ...
'NDARINVT345WWLE', ...
'NDARINVT3M2ZGNF', ...
'NDARINVT3YD0HU4', ...
'NDARINVT472A3DT', ...
'NDARINVT4NLHUX4', ...
'NDARINVT4R7JDBE', ...
'NDARINVT4WTLFZ6', ...
'NDARINVT4XN7N6T', ...
'NDARINVT5B642W6', ...
'NDARINVT5G6HNMZ', ...
'NDARINVT61FZXTW', ...
'NDARINVT6E1MJ14', ...
'NDARINVT7HVBTRE', ...
'NDARINVT7KRTJPP', ...
'NDARINVT7Y0PYDA', ...
'NDARINVT88PYFND', ...
'NDARINVT8JB3RWP', ...
'NDARINVT954PXG7', ...
'NDARINVT9LPE86G', ...
'NDARINVT9UU6CM8', ...
'NDARINVTA3NBRK7', ...
'NDARINVTAMN62RZ', ...
'NDARINVTAN0M8LG', ...
'NDARINVTAP6MEMP', ...
'NDARINVTAT7LM08', ...
'NDARINVTATNKDNJ', ...
'NDARINVTAV7MB4T', ...
'NDARINVTAX3MN8C', ...
'NDARINVTAY698CJ', ...
'NDARINVTBHHD1UX', ...
'NDARINVTBJX7XV9', ...
'NDARINVTC53X138', ...
'NDARINVTC7KEJAP', ...
'NDARINVTCAFT1FE', ...
'NDARINVTCEFC244', ...
'NDARINVTCJ78M4K', ...
'NDARINVTCJV2RMX', ...
'NDARINVTCRZTUB8', ...
'NDARINVTCT40GNY', ...
'NDARINVTD6L7VPT', ...
'NDARINVTD7KHM6F', ...
'NDARINVTDBPZG5V', ...
'NDARINVTDCECT0D', ...
'NDARINVTDJD7JZ2', ...
'NDARINVTDK7YAGN', ...
'NDARINVTDXY0L82', ...
'NDARINVTE4HH4XV', ...
'NDARINVTE65EW0X', ...
'NDARINVTE7EH6CE', ...
'NDARINVTELF8WZW', ...
'NDARINVTELJP2LE', ...
'NDARINVTENZ2AJL', ...
'NDARINVTEZKLFY3', ...
'NDARINVTF98DX8N', ...
'NDARINVTFBVU6CV', ...
'NDARINVTFBZR8TN', ...
'NDARINVTFE6R22P', ...
'NDARINVTFJ2LGCD', ...
'NDARINVTFL83UPB', ...
'NDARINVTFPAU4FF', ...
'NDARINVTFPK1DRW', ...
'NDARINVTFUH55TZ', ...
'NDARINVTFV0Y41D', ...
'NDARINVTG681ULE', ...
'NDARINVTGBMDN8N', ...
'NDARINVTGXYZJTP', ...
'NDARINVTH0VHX42', ...
'NDARINVTH1YJVJ1', ...
'NDARINVTH3T33V5', ...
'NDARINVTHEX3U3X', ...
'NDARINVTHF11PAH', ...
'NDARINVTHHL55VX', ...
'NDARINVTHW9XF3F', ...
'NDARINVTHX3BFMR', ...
'NDARINVTJJXH8K7', ...
'NDARINVTJWRH4A3', ...
'NDARINVTK5NYC8X', ...
'NDARINVTKF4EW4A', ...
'NDARINVTL0JKXBF', ...
'NDARINVTL570LHZ', ...
'NDARINVTL901BED', ...
'NDARINVTLEM4F9A', ...
'NDARINVTLR8HXZD', ...
'NDARINVTM2HD1WE', ...
'NDARINVTM382X5A', ...
'NDARINVTM88BLXR', ...
'NDARINVTMCFFAJT', ...
'NDARINVTMFT5TJF', ...
'NDARINVTMRGF3F4', ...
'NDARINVTMTWB0ZX', ...
'NDARINVTNE22YA5', ...
'NDARINVTNR04C9A', ...
'NDARINVTNVU9DYV', ...
'NDARINVTP3NTJB0', ...
'NDARINVTP6W072A', ...
'NDARINVTPXZDTAT', ...
'NDARINVTRGFZFT8', ...
'NDARINVTRNDDNH4', ...
'NDARINVTT0WEJUX', ...
'NDARINVTT3RTWGF', ...
'NDARINVTT6DWKXA', ...
'NDARINVTT9JRJDR', ...
'NDARINVTTNVZVLW', ...
'NDARINVTTV73ARA', ...
'NDARINVTU1DE4PM', ...
'NDARINVTU4MAPYT', ...
'NDARINVTUH09WJW', ...
'NDARINVTV4KFLNU', ...
'NDARINVTV8G8UHT', ...
'NDARINVTVBUYZ8P', ...
'NDARINVTVZVDPG7', ...
'NDARINVTW72EVWM', ...
'NDARINVTWB035Y1', ...
'NDARINVTWRJGVKX', ...
'NDARINVTX4K8UGF', ...
'NDARINVTXB709BK', ...
'NDARINVTXDDBHFX', ...
'NDARINVTXGL96R1', ...
'NDARINVTXK16WY8', ...
'NDARINVTXP1FUP8', ...
'NDARINVTXT5J9FD', ...
'NDARINVTY4J79EA', ...
'NDARINVTY7NL56R', ...
'NDARINVTYMED11H', ...
'NDARINVTYZ21CK1', ...
'NDARINVTZ0RTCNR', ...
'NDARINVTZ42813G', ...
'NDARINVTZ6EYWUJ', ...
'NDARINVTZM2XE2H', ...
'NDARINVTZUEJ54R', ...
'NDARINVTZUFYJ76', ...
'NDARINVU05WUH4L', ...
'NDARINVU0AFNB1U', ...
'NDARINVU0T6GWNN', ...
'NDARINVU102M8W0', ...
'NDARINVU103BUTM', ...
'NDARINVU11NYL5H', ...
'NDARINVU1MFZFX8', ...
'NDARINVU1T94DML', ...
'NDARINVU1THG28C', ...
'NDARINVU2BFUB9N', ...
'NDARINVU2MZM32T', ...
'NDARINVU2TMK1UK', ...
'NDARINVU2UT8NAW', ...
'NDARINVU316NYRT', ...
'NDARINVU390V94C', ...
'NDARINVU3M4BG5Y', ...
'NDARINVU3W1437G', ...
'NDARINVU3XLKGUY', ...
'NDARINVU43XT2KJ', ...
'NDARINVU46YJV27', ...
'NDARINVU4B58TJY', ...
'NDARINVU575WJ15', ...
'NDARINVU5DCN232', ...
'NDARINVU5DHD2B7', ...
'NDARINVU5GEZR43', ...
'NDARINVU5J9959A', ...
'NDARINVU5KBVWZD', ...
'NDARINVU5T2LA5F', ...
'NDARINVU5Z0C61N', ...
'NDARINVU61CF84L', ...
'NDARINVU62X1GAH', ...
'NDARINVU6C1J3JP', ...
'NDARINVU6KP4B6G', ...
'NDARINVU6T6KG2P', ...
'NDARINVU7KXR08V', ...
'NDARINVU7L6GBPV', ...
'NDARINVU7UB0WTJ', ...
'NDARINVU80WLNR2', ...
'NDARINVU830CVT7', ...
'NDARINVU8D4R4YF', ...
'NDARINVU8KM6L2C', ...
'NDARINVU8U5U022', ...
'NDARINVU99HJDM4', ...
'NDARINVU9C9ZMKM', ...
'NDARINVU9ETKTN0', ...
'NDARINVU9P37GDT', ...
'NDARINVUA1GPU5Z', ...
'NDARINVUA34TJP4', ...
'NDARINVUAB56Z7Z', ...
'NDARINVUAERPXD7', ...
'NDARINVUAHG246H', ...
'NDARINVUB096N6Y', ...
'NDARINVUB4XK4NV', ...
'NDARINVUB6FN6XG', ...
'NDARINVUB6TZMWL', ...
'NDARINVUBFY4UNN', ...
'NDARINVUBKLVB72', ...
'NDARINVUC3J0UH9', ...
'NDARINVUC80Z0WM', ...
'NDARINVUCGJ1U8F', ...
'NDARINVUCUU472H', ...
'NDARINVUDBJ9V2N', ...
'NDARINVUDUKRV36', ...
'NDARINVUDXAL2AW', ...
'NDARINVUEB7ZA46', ...
'NDARINVUEBPZ7X3', ...
'NDARINVUEP9AVEL', ...
'NDARINVUEPAL53D', ...
'NDARINVUEVZC0HH', ...
'NDARINVUEXW27D7', ...
'NDARINVUF00N1FK', ...
'NDARINVUF504K04', ...
'NDARINVUFF64VGJ', ...
'NDARINVUFFFFXBF', ...
'NDARINVUFHL6EBR', ...
'NDARINVUFVGYBER', ...
'NDARINVUGA7X1BC', ...
'NDARINVUGD7DXX7', ...
'NDARINVUGNK7ZYA', ...
'NDARINVUGP7XGXD', ...
'NDARINVUGP8FHFC', ...
'NDARINVUH0F2U1W', ...
'NDARINVUH4F3Z71', ...
'NDARINVUH6R1YZV', ...
'NDARINVUH77PVBN', ...
'NDARINVUHN1WLRZ', ...
'NDARINVUHT34WP1', ...
'NDARINVUHUVY3KZ', ...
'NDARINVUJ1389BN', ...
'NDARINVUJ86W3MP', ...
'NDARINVUJGVYU5N', ...
'NDARINVUJTA9MD9', ...
'NDARINVUJWZJLT4', ...
'NDARINVUK57KUZE', ...
'NDARINVUK58FDWG', ...
'NDARINVUKEHKCA6', ...
'NDARINVUKG8ND85', ...
'NDARINVUKM5BB37', ...
'NDARINVUKT3Y1U0', ...
'NDARINVUKZ2E83X', ...
'NDARINVUL9WW7ET', ...
'NDARINVULJ63ZZK', ...
'NDARINVULRUN522', ...
'NDARINVUM3L54UF', ...
'NDARINVUM8RJJDZ', ...
'NDARINVUMHGTLW8', ...
'NDARINVUN1M9EZ6', ...
'NDARINVUN26G8WH', ...
'NDARINVUN2A7AA5', ...
'NDARINVUN80YW88', ...
'NDARINVUNWBU521', ...
'NDARINVUNZ46TB8', ...
'NDARINVUNZGDT4H', ...
'NDARINVUP3WUX7T', ...
'NDARINVUP72WLKM', ...
'NDARINVUPKM7CMH', ...
'NDARINVUPPU9A5W', ...
'NDARINVUR7GBKPR', ...
'NDARINVURFDN3WC', ...
'NDARINVURJ3XK7W', ...
'NDARINVURNYZ0V7', ...
'NDARINVURPDWTVH', ...
'NDARINVURUR52NZ', ...
'NDARINVURYDCKP1', ...
'NDARINVURZU1N9V', ...
'NDARINVUTCZ1TL4', ...
'NDARINVUTNUNCNK', ...
'NDARINVUTPXGCV1', ...
'NDARINVUU2VUW5T', ...
'NDARINVUUBJL9X5', ...
'NDARINVUVHFPBMC', ...
'NDARINVUVP8NKL5', ...
'NDARINVUW7KX694', ...
'NDARINVUW7RPNEP', ...
'NDARINVUWAU3TFB', ...
'NDARINVUWP79YF4', ...
'NDARINVUWRM3PWZ', ...
'NDARINVUWTWYGD1', ...
'NDARINVUWZLKLE0', ...
'NDARINVUWZXJGWG', ...
'NDARINVUX1XKDLN', ...
'NDARINVUX20B6L5', ...
'NDARINVUX8RG3BK', ...
'NDARINVUXTPV7WH', ...
'NDARINVUXWUN73X', ...
'NDARINVUXX4B4ZL', ...
'NDARINVUY1UGEA3', ...
'NDARINVUYU4JRJA', ...
'NDARINVUZ89A2LM', ...
'NDARINVUZMCUYWY', ...
'NDARINVUZMRNA0C', ...
'NDARINVUZY9W14J', ...
'NDARINVUZYC1YD6', ...
'NDARINVUZYFLAPC'};
%}

hemis = {'lh','rh'};
bad_acpc = {};

fileID = fopen('/mnt/acorn/abcd/matproc/scripts/bad_acpc.txt', 'rt');
a = fscanf(fileID, char);
tline=fgetl(fileID);
while ischar(tline)
   disp(tline);
   bad_acpc = [bad_acpc, tline];
   tline=fgetl(fileID);
end
fclose(fileID);
            
for isubj = 1:length(subjects)

    subjectDir    = [subjects{isubj}];
    subjectRefImg = [subjects{isubj} '_t1_y1_acpc.nii.gz'];
    dtFile = fullfile(baseDir, subjectDir, '/dti60trilin/dt6.mat');
    refImg = fullfile(baseDir, subjectDir, subjectRefImg);
    fibersFolder  = fullfile(baseDir, subjectDir, '/dti60trilin/fibers/mrtrix/');
    roiFolder = fullfile(baseDir, subjectDir, 'ROIs');
       
    % We want to track the subcortical pathway
    fromRois = '_nacc_aseg_fd';
    toRois   = {'_vtapbp_fd'};
    wmMaskFS = '_vta_nacc_mask_merged_fd'; %_wmmask_fs_fd      
    
    % Set up the MRtrix tracking parameters
    trackingAlgorithm = {'prob'};
    lmax    = [6]; % The appropriate value depends on # of directions. For 32, use lower #'s like 4 or 6. For 70+ dirs, 6 or 10 is good [10];
    maxNFibers2try2find  = 1000; % 10000; % this the number of fibers to find
    maxNFibers2try = 500000; %1000000; % this is the max number of fibers to try before giving up
    cutoff = 0.05; %FA cutoff along path
    initcutoff = 0.05; %FA cutoff at seed
    curvature = 1; %curvature radius. formula: angle = 2 * asin (S / (2*R)), S=step-size, R=radius of curvature
    stepsize = 0.2; %voxel-voxel step distance
    wmMask = [];
    
    %before we start tracking, make sure auto-acpc was performed correctly.
    %Check z coordinate, make sure it isn't absurdly low ( < -180, for our
    %purposes)
    
    %{
    cmd = ['3dinfo -Iextent /mnt/acorn/abcd/matproc/' subjectDir '/' subjectRefImg];
    [status,Ilim] = system(cmd);
    Ilim = cellstr(Ilim);
    Ilim = [Ilim{:}];
    Ilim = str2double(Ilim);
    
    cmd = ['3dinfo -Sextent /mnt/acorn/abcd/matproc/' subjectDir '/' subjectRefImg];
    [status,Slim] = system(cmd);
    Slim = cellstr(Slim);
    Slim = [Slim{:}];
    Slim = str2double(Slim);
    
    if Ilim < -180 || Slim > 180
       disp(['bad acpc ' subjectDir]); 
       bad_acpc = [bad_acpc subjectDir];
    else
    %}
    if ismember(subjects{isubj}, bad_acpc)
        disp(['bad acpc ' subjectDir]);
    else
    
        for hemi = 1:length(hemis)
            try
                fromRoiHemi = [hemis{hemi} fromRois];
                wmMaskHemi = [hemis{hemi} wmMaskFS];
                wmMaskName = fullfile(roiFolder, wmMaskHemi);

                % Make an (include) white matter mask ROI. This mask is the smallest
                % set of white matter that contains both ROIS (fromRois and toRois)
                %
                % We use a nifti ROi to select the portion of the White matter to use for
                % seeding
                [~, wmMaskNiftiName] = dtiRoiNiftiFromMat(wmMaskName,refImg,[],1);

                % Then transform the niftis into .mif
                [p,f,e] = fileparts(wmMaskName);
                wmMaskMifName    = fullfile(p,sprintf('%s.mif',f));
                %wmMaskNiftiName  = sprintf('%s.nii.gz',wmMaskName);
                mrtrix_mrconvert(wmMaskNiftiName, wmMaskMifName);

                % This first step initializes all the files necessary for mrtrix.
                % This can take a long time.

                %replace "cylon" with "mnt" in filepath contained in dt6
                %parameters. oops.
                %need to remove this at some point. No longer necessary.
                dt_info = load(dtFile);

                old_path = dt_info.params.rawDataDir;
                new_path = strrep(old_path, 'cylon', 'mnt');
                old_subpath = dt_info.params.subDir;
                new_subpath = strrep(old_subpath, 'cylon', 'mnt');
                dt_info.params.rawDatDir = new_path;
                dt_info.params.subDir = new_subpath;

                DwRaw = dt_info.files.alignedDwRaw;
                DwBvecs = dt_info.files.alignedDwBvecs;
                DwBvals = dt_info.files.alignedDwBvals;

                new_DwRaw = strrep(DwRaw, 'cylon', 'mnt');
                new_DwBvecs = strrep(DwBvecs, 'cylon', 'mnt');
                new_DwBvals = strrep(DwBvals, 'cylon', 'mnt');

                dt_info.files.alignedDwRaw = new_DwRaw;
                dt_info.files.alignedDwBvecs = new_DwBvecs;
                dt_info.files.alignedDwBvals = new_DwBvals;
                


                files = mrtrix_init(dt_info,lmax,fibersFolder,wmMask);

                % Convert the ROIs from .mat or .nii.gz to .mif format.
                fromRoiName = fullfile(baseDir, subjectDir, '/ROIs/', fromRoiHemi);
                [~, fromRoiNiftiName] = dtiRoiNiftiFromMat(fromRoiName, refImg, [], 1);
                fromRoiMifName    = fullfile(p,sprintf('%s.mif',fromRoiHemi));
                %fromRoiNiftiName  = sprintf('%s.nii.gz',fromRoiName);
                mrtrix_mrconvert(fromRoiNiftiName, fromRoiMifName);

                % loop across toRois, must recreate hemisphere name
                for i_roi = 1:length(toRois)
                    toRoiHemi = [hemis{hemi} toRois{i_roi}];
                    toRoiName = fullfile(baseDir, subjectDir, '/ROIs/', toRoiHemi);
                    [~, toRoiNiftiName] = dtiRoiNiftiFromMat(toRoiName, refImg, [], 1);
                    toRoiMifName    = fullfile(p,sprintf('%s.mif',toRoiHemi));
                    %toRoiNiftiName  = sprintf('%s.nii.gz',toRoiName);
                    mrtrix_mrconvert(toRoiNiftiName, toRoiMifName);
                end

                % Create joint from/to Rois to use as a mask
                for nRoi = 1:length(toRois)
                    % MRTRIX tracking between 2 ROIs template.
                    roi{1} = fullfile(baseDir, subjectDir, '/ROIs/', fromRoiHemi);
                    % loop across toRois, must recreate hemisphere name
                    toRoiHemi = [hemis{hemi} toRois{nRoi}];
                    roi{2} = fullfile(baseDir, subjectDir, '/ROIs/', toRoiHemi);

                    roi1 = dtiRoiFromNifti([roi{1} '.nii.gz'],[],[],'.mat');
                    roi2 = dtiRoiFromNifti([roi{2} '.nii.gz'],[],[],'.mat');

                    % Make a union ROI to use as a seed mask:
                    % We will generate as many seeds as requested but only inside the voume
                    % defined by the Union ROI.
                    %
                    % The union ROI is used as seed, fibers will be generated
                    % starting ONLY
                    % within this union ROI.
                    roiUnion        = roi1; % seed union roi with roi1 info
                    roiUnion.name   = ['union of ' roi1.name ' and ' roi2.name]; % r lgn calcarine';
                    roiUnion.coords = vertcat(roiUnion.coords,roi2.coords);
                    roiName         = fullfile(baseDir, subjectDir, '/ROIs/',[roi1.name '_' roi2.name '_union']);
                    [~, seedMask]   = dtiRoiNiftiFromMat(roiUnion,refImg,[roiName '.nii.gz'],1);
                    seedRoiNiftiName= sprintf('%s.nii.gz',roiName);
                    seedRoiMifName  = sprintf('%s.mif',seedMask);

                    % Transform the niftis into .mif
                    mrtrix_mrconvert(seedRoiNiftiName, seedRoiMifName);

                    % We cd into the folder where we want to sae the fibers.
                    cd(fibersFolder);

                    % We genenrate and save the fibers in the current folder.
                    [fibersPDB{nRoi}, status, results] = s_gen_mrtrix_track_roi2roi(files, [roi{1} '.mif'], [roi{2} '.mif'], ...
                        seedRoiMifName, wmMaskMifName, trackingAlgorithm{1}, ...
                        maxNFibers2try2find, maxNFibers2try, cutoff, initcutoff, curvature, stepsize);

                    %fgWrite(fibersPDB,['fibername'],'pwd')
                end
            catch e
                disp(e.identifier);
                disp(e.message);
            end
        end
    
    end
end

%write out bad_acpc subjects to text file in matproc directory.
%fid = fopen('/mnt/acorn/abcd/matproc/bad_acpc.txt','w');
%for i = 1:length(bad_acpc)
%   fprintf(fid, '%s\n',bad_acpc{i});
%end
%fclose(fid);

return  