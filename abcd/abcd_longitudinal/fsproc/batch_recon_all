#!/bin/bash

## Determine number of cores for multithreading, if set
ncores=`nproc --all`
#echo $ncores

## Read project folder path from json file
projpath=`cat args.json | jq -r '.out'`

## Read in parallel proc bool
par=`cat args.json | jq -r '.par'`

## Read in number of cores per fs instance
fscore=`cat args.json | jq -r '.numcore'`

## Read in timepoint to use
tval=`cat args.json | jq -r '.timeval'`

## Read in subject txtfile
txtfile=`cat args.json | jq -r '.txt'`

## Generate fsproc dir in project folder based on year
if ! test -d $projpath"/"$tval"/fsproc"; then
	mkdir $projpath"/"$tval"/fsproc"
fi

## If parallel trigger set to true, determine number of instances of fs to run
## To do this, divide total number of cores by fscore
cmdstring=""
if [ $par -eq 1 ]; then
	numterm=$(( ncores / fscore ))

	## Will split subject textfile into subfiles. To do this, need number to split by.
	nsubs=`cat $txtfile | wc -l`
	nsplit=$(( nsubs / numterm ))
	nsplit=$(( nsplit + 1 )) #bash floors the result by default. Add 1 to compensate.

	split -l $nsplit $txtfile ${txtfile::-4}"_" -a 2 --numeric-suffixes=1


	#echo $numterm
	for ((num=1;num<numterm;num++)); do
		if [ $num -lt 10 ]; then
			numstring="0"$num
		else
			numstring=$num
		fi
		echo $numstring
		cmdstring=$cmdstring" gnome-terminal -- ./recon_all "${txtfile::-4}"_"$numstring" &"
	done

	cmdstring=${cmdstring::-2}
else
	cmdstring="./recon_all "$txtfile
fi

echo $cmdstring
eval $cmdstring
